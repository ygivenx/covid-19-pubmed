{"title": "A relative Lempel-Ziv complexity: Application to comparing biological sequences", "body": "Multiple sequence alignments are an essential tool for protein structure and function prediction, phylogeny inference and other common tasks in sequence analysis. Traditional sequence alignment method is much empirical to select a sequence alignment scoring matrix and gap penalty parameters, the difference of which may affect alignment results tremendously. In order to avoid this problem, during the last twenty years, several alignment-free methods for sequence comparison have arisen much interest in the field of computational biology. For example, graphical representations of biological sequences have been one kind of alignment-free methods to sequence analysis. Graphical method for visualizing DNA sequence is early proposed by Hamori and Ruskin [1] . Using graphic approaches to study biological systems can provide intuitive and useful insights, as indicated by many previous studies on a series of important biological topics [2, 3] . Liao et al. reported on a sort of binary coding method of RNA secondary structures and coding rules based on the exclusive-OR operation [4] . In another paper, Liao et al. propose a 4-D representation of RNA secondary structures and outline an approach to make mathematical analysis and to compute the similarities between RNA secondary structures [5] . Liao et al. proposed a 6D representation of protein sequences consisting of 20 amino acids. Based on this 6D representation, they provided a proteome distance measure for constructing phylogenic tree [6] . In the report [7] , Jia et al. proposed a novel 2D representation for protein secondary structure sequences. Word-based measure is one of widely used alignment-free approaches. In this method, each sequence is mapped into an n-dimensional vector according to its k-word frequencies, and similarity between the sequences is then defined by n-dimensional vector [8, 9] . The LZ algorithm is another widely used alignmentfree algorithm. Based on the relative information between the sequences using Lempel-Ziv complexity, a new sequence distance measure is proposed [10] . Zhang and Wang used conditional The LZ algorithm to compare the linear characteristic sequences of RNA secondary structures [11] .\n\nOur approach is motivated by the LZ algorithm. In order to depict the complexity relationship between two sequences, in the present report, we use relative the LZ complexity to analyze biological sequences. The proposed method is tested by phylogenetic analysis on two different data sets: 24 transferring sequences from vertebrates and 26 spike protein sequences from coronavirus. The results demonstrate that relative LZ complexity provides more information about phylogenetic and improves the efficiency of sequence comparison.\n\nThe LZ algorithm was developed to analyze the complexity of linear sequences by Lempel and Ziv [12] . Lempel-Ziv (LZ) complexity of a sequence is measured by the minimal number of steps required for its synthesis in a certain process. For each step only two operations are allowed in the process: either generating an additional symbol which ensures the uniqueness of each component or copying the longest fragment from the part of a synthesized sequence [13] . In recent years, some authors applied the algorithm to compare sequences and construct phylogenic trees. For instance, Otu and Sayood applied the LZ algorithm to phylogenic analysis and had successfully constructed phylogenic trees for real and simulated DNA data sets [10] . Liu and Wang take the physicochemical properties of amino acids into account, and used the LZ algorithm to construct phylogenic trees [14] . In this study, the measure of relative LZ complexity between two sequences is proposed according to the principle of the LZ complexity. The LZ complexity distance metric between two nonnull sequences is defined by utilizing relative LZ complexity.\n\nNext, we will give some basic definitions and properties about relative LZ complexity. Let the sequence S = S 1 S 2 \u00c1 \u00c1 \u00c1S n , l(S) = n represents the length of S, the subsequence S i S i+1 \u00c1 \u00c1 \u00c1S j of S be denoted as S(i, j). The set that contains all subsequence S(i, j) is called the vocabulary v(S) of S. Note that S(i, j) = u, for i > j .\n\nLet S = S 1 S 2 \u00c1 \u00c1 \u00c1S n be a non-null sequence, then produce S from null sequence according the following algorithm [15] .\n\n(1) At the beginning we have a null-sequence u, then add prefix S = S 1. If n > 1, need add a dot after S 1 .\n\n(2) Let a prefix Q = S 1 S 2 \u00c1 \u00c1 \u00c1S r , 0 < r < n be available, check if R = S r+1 can be reproduced from S(1, r), or if R cannot reproduced from a subsequence of S(1, r), then join Q and R to get a new prefix QR, and add a dot following QR. If R = S r+1 can be reproduced from a subsequence of S(1, r), then check again if R = S r+1 S r+2 can reproduced from S(1, r + 1). If so, check again if R = S r+1 S r+2 S r+3 can reproduced from S(1, r + 2)\u00c1 \u00c1 \u00c1 and so on.\n\nThere two possible cases: In the case R = S r+1 \u00c1 \u00c1 \u00c1S n , then we end the procedure, and get new prefix QR = S, in another case R = S r+1 \u00c1 \u00c1 \u00c1S k cannot be reproduced from any subsequence of S(1, k -1), then get a new prefix QR and add a dot behind it. (3) Repeat the step (2) until produce S.\n\nThis algorithm is the LZ algorithm. Then, the sequence S can partition into some subsequences that arrange one after another. Denote this partition as follows:\n\nLempel and Ziv proved the exclusive partition about H LZ and defined the LZ complexity C LZ (S) of S as the number of subsequence in\n\nGiven two sequences Q, R, according to the theory of Lempel and Ziv about sequence partition, we can also partition sequence Q into the subsequences one after another, called it relative partition of sequence Q corresponding to sequence R. Denote it as follows:\n\nH LZ (Q|R) satisfies the following three properties:\n\n(1) h 0 = 0;\n\n(2) 81 6 k 6 \u00f0m 0 \u00c0 2\u00de; Q \u00f0h k \u00fe 1; h k\u00fe1 \u00c0 1\u00de 2 v\u00f0R\u00de; Q\u00f0h k \u00fe 1; h k\u00fe1 \u00de R v\u00f0R\u00de;\n\nThe complexity r LZ (Q|R) of Q corresponding to sequence R is the number of subsequence in H LZ (Q|R), namely r LZ (Q|R) = m 0 . This relative partition is also exclusive. In order to compute the relative LZ complexity of Q, we only need to add the sequence R as the prefix of sequence Q. The flow diagram for the algorithm to calculate r LZ is shown by Figure 1 . The time complexity of this algorithm is\n\nClearly, 1 6 r LZ \u00f0Q jR\u00de 6 l\u00f0Q \u00de. If Q which deletes its last character is subsequence of R, the result is r LZ \u00f0Q jR\u00de \u00bc 1. If all characters in Q do not belong to R, the result is r LZ \u00f0Q jR\u00de \u00bc l\u00f0Q \u00de.Genome rearrangement is an important area of computational biology. The goal is to find the shortest sequence of genome arrangements operations that transform one genome into another. There are several basic operations: reversal, translocation and transposition. Traditional sequence alignment methods can only operate locally (e.g. insert, delete, replace) and thus ignore aspects of global sequence information (e.g. reversal, translocation, transposition).\n\nFor example, the sequence Q = AAAAAAAAGGGGGGGG is converted to R = GGGGGGGGAAAAAAAA by reversal. We use CLUSTAL 2.1 to compare these two sequences. The result is A A A A A G G G G G G G G \n\nThis result suggests that the time to perform the operations (insert, delete) is 16. On the other hand, we calculate the r LZ (Q|R) = 2. Clearly, the r LZ (Q|R) can to a great extent reflect the sequence similarity.\n\nIn order to eliminate the effect of the length of sequence Q on the distance measure, we normalize the distance measure as r LZ (Q|R)/l(Q). Therefore we define the distance as\n\nIn this section, we illustrate the performance of our method on both DNA sequences and protein sequences. The validity of a phylogenetic tree can be tested by comparing it with authoritative ones. All the phylogenetic trees are drawn by using MEGA program.\n\nIn order to test the validity of our method, we select transferrin sequences from 24 vertebrates as a dataset [16] . Vertebrate transferrins (including lactoferrin and ovotransferrin) are iron-binding proteins found in blood serum, interstitial spaces, milk, tears, and egg whites [17] . It can be involved in iron storage and resistance to bacterial disease [16] . The 24 vertebrate transferrins genomes used in this report are downloaded from GenBank (data arepresented in Table 1 ).\n\nWe will consider the 24 transferrin sequences and calculate their distances Eq. (1). By arranging all these distances into a matrix, a pair-wise distance matrix is derived. This distance matrix contains the distance information on the 24 transferrin sequences. Lastly, this pair-wise distance matrix may be input to the Neighbor-joining program in PHYLIP package for a phylogenetic tree. The result is shown in Figure 2 . Figure 2 presents the phylogenetic trees reconstructed by our method. From Figure 2 we can observe that all the proteins that belong to transferring (TF) proteins and lactoferrin (LF) proteins have been separated well and grouped into respective taxonomic classes accurately. Human TF, Rabbit TF, Cow TF and Rat TF are clustered into the same branch. The Rat TF, Cow TF are separated from Human TF and Rabbit TF. The tree in Figure 2 is the most consistent with the trees constructed by Ford [16] , which is the most classical result in the publicized existing trees.\n\nSumming up, our method has significant advantage, and our results are almost agreement with that of previous studies.\n\nPhylogenetic analysis on genome sequences and protein sequences of coronaviruses has been studied by different methods, such as multiple sequence lignments, graphical representation, and word frequency. Here the phylogenetic tree for 26 spike protein sequences in Table 2 from coronavirus is instructed by our method, which is presented in Figure 3 .\n\nOn March 12, 2003 , WHO issued a global alert on severe acute respiratory syndrome (SARS). Since the outbreak of atypical pneumonia referred to as SARS, some researchers have considered the mutation analysis and phylogenetic analysis [18] [19] [20] . Moreover, mutation analysis and phylogenetic analysis will help to develop effective vaccines.\n\nBased on the relative LZ complexity, we next consider to infer the phylogenetic relationships of coronaviruses with the spike protein sequences. The 26 spike protein sequences used in this report were downloaded from GenBank, of which 12 are from SARS-CoVs and 14 are from other groups of coronaviruses. The name, accession number and abbreviation for the 26 spike protein sequences are listed in Table 2 . Given a set of protein sequences, their phylogenetic tree can be obtained through the following main operations: first, we calculate the relative LZ complexity for protein sequences; second, by arranging all these distances into a matrix, we obtain a pair-wise distance matrix. Finally, we put the pairwise distance matrix into the neighbor-joining program in the PHYLIP package. We obtain the phylogenetic relationships drawn by MEGA program [21]. In Figure 3 , we present the unrooted phylogenetic tree belonging to 26 species.\n\nAs can be seen from Figure 3 , SARS-CoVs appear to cluster together and form a separate branch, which can be easily distinguished from other coronaviruses. The topology of the tree obtained by our method is quite consistent with the results obtained by other authors [22, 23] .\n\nSequence comparison is rapidly becoming an essential tool for bioinformatics applications. It has been used to support other types of analysis, from searching a database with a query DNA sequence to the phylogenetic tree construction. Despite the prevalence of alignment-based methods, it is noteworthy that alignment-based method is computationally intensive and consequently unpractical for querying large data sets, which forces the use of some heuristics to reduce the running times, as exemplified by BLAST. Alignment-free comparison method is therefore of great value as it reduces the technical constraints of alignments.\n\nA novel alignment-free method for sequence comparison is proposed in this work. The relative LZ complexity has been introduced into biological sequence comparison. The time complexity of this algorithm is O(l(Q) \u00c2 l(R)). The main advantage is that this method can extract repeated patterns from biological sequence. Therefore, when two sequences are compared, the subsequences that they share can be detected. In this report, we use the relative LZ complexity to describe the similarity of the biological sequences. The two experiments have shown that the approach proposed in this report is a powerful and useful tool for the comparison of biological sequence. Studies of the application of this method to whole coding DNA sequences, RNA sequence and protein sequence will appear in the future. Furthermore, this method can be used to prediction of protein secondary structure. The shortage of this method is that some information may be lost when protein primary structures are converted to protein feature sequences. However, the tests have proven that our method can extract phylogenetic information from proteins and hence it can complement phylogenetic analysis. T O R 2 F r a n k f u r t 1 U r b a n i A 0 2 2 Figure 3 . Phylogenetic tree obtained by our method using spike protein sequences."}