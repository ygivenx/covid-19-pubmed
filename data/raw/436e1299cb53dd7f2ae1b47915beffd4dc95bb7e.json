{"title": "Applications of machine learning techniques to a sensor-network-based prosthesis training system", "body": "The leg-amputees who wear lower-limb prostheses suffer from attenuated tactile knowledge of their extension, owing to the natural sensory loss resulting from amputation [1] . Many clinical studies report that amputees exhibit an asymmetrical gait pattern [2] [3] [4] . For example, unilateral transtibial amputees generally have higher hip extension, knee flexion, and ankle dorsiflexion in amputated side than those in the unaffected side. Leg-amputees are accustomed to the asymmetrical gait pattern if they do not take a series of training after wearing limb prosthesis. Apart from discomfort, the amputees might suffer from some spinal deformities or muscle injuries. Owing to lacking of exercise, muscular flaccidity might occur and the stumps will be getting swollen resulting in that patients cannot swing their thighs backward, and the shank and the knee joint cannot be straightened. Therefore, an expert had better accompany the amputee during the training process to rectify the amputee's gait and the training expense is accordingly significantly increased.\n\nIt was reported in [5] that a microprocessor-controlled prosthetic knee can use onboard electronic sensors to collect real-time data and control stance and swing phase movements as well. The human-machine interface for the prosthesis socket has to be properly designed to achieve satisfactory load transmission, stability, and efficient control for mobility [6] [7] [8] . The powered ankle-foot prosthesis is capable of providing human-like ankle work and power during stance and decreasing the metabolic cost of transport compared with the conventional passive-elastic prosthesis [9] . The prosthetic legs outfitted with Bluetooth technology were designed in [10] to make two limbs coordinate each other to control the leg movement. Despite a multitude of technical advances in lowerlimb prostheses have been observed in the literature, no existing approaches are able to warn the amputee for the detection of the asymmetrical gait. Though Bluetooth prosthesis [10] can automatically control the leg movement for the amputee, the amputee might suffer from uncomfortable and uncoordinated walking. A well-designed gait training process for rehabilitation is thus still demanded. In the recent positioning technology, Want et al. [11] uses diffuse infrared to develop an active badge positioning system. Users wear badges that transmit infrared signals to provide information about their location to a centralized location service via a network of sensors. However, the infrared signals have the weakness of moving in a straight line, short transmission distance, and easily disturbed by the environment.\n\nIt was observed that some sequelae may arise in the traditional way of gait training due to insufficient gait experts' training or relatively high fee. Moreover, the evaluation of gait training effectiveness relies upon accumulated experiences that gait trainer owns and little explicit criterion can be followed. Accordingly, many general statements are used in training records that cause difficult tracing of therapy process. To tackle above-mentioned problems, several important factors are considered in this work, including setting up the quantitative index for leg-amputees training effectiveness assessment, providing real-time guidance for self-training at home, establishing the mechanism of supervising and tracing training process of leg-amputees, offering easy installation, operation, and maintenance to leg-amputees, and considering the affordability of mid and low income families.\n\nA body area sensor network (BASN) is employed in the work. A BASN consists of multiple interconnected nodes on, near, or within a human body, which together provide sensing, processing, and communication capabilities. Through intelligent computing techniques, a BASN can be enabled to monitor environments, systems, and complex interactions in a range of applications, such as healthcare, fitness, and entertainment. A radio frequency identification (RFID) system is adopted to locate the moving track of patient wearing limb prosthesis, and outputs of the RFID are the relative angular magnitude, location, and elapsed time. The received signal strength indication (RSSI) technique [12] is adopted in this work to compute the transmission distance of RFID based on the information received from RFID. RSSI is a circuit that measures the strength of an incoming radio frequency (RF) signal and generates an output that is equivalent to the signal strength. The ability of the receiver to pick the weakest of signals is referred to as receiver sensitivity. The higher the receiver sensitivity is, the better the link quality is. The circuits are designed to measure the signal strength based on the output voltage. The output voltage is higher if the signal strength is good, and vice versa.\n\nAn RFID system consists of RFID tags also known as transponders and readers also called interrogators. Coupled with wired or wireless communications, the applications of RFID technology keep increasing in recent years and RFID systems offer many new possibilities and have given rise to new fields aimed at integrating distributed intelligence software applications into our daily lives. Examples of the RFID applications include toll road systems, passports, automobile immobilizer systems, supply-chain management, and animal identification. A so-called location identification based on dynamic active RFID calibration (LANDMARC) was proposed in [13] , and the proposed system uses four readers and sixteen active tags to calculate the position of the tracking tag. The advantage of this system is to utilize the concept of the reference tag, and to improve the overall accuracy of positioning. RFID is suitable for short-range wireless transmission because of low-cost, small size, and easy establishment, and it is suitable for indoor positioning system because of having two-way communication function. RFID systems have also been applied increasingly in telemedicine and healthcare facilities to provide medical information and services. The technology offers great potential benefits and it is the next big step to identify and track patients, objects, and assets, and speed up or eliminate many manual operations in checking and processing patients. For example, Alexandra hospital in Singapore adopted an RFID tracking system to monitor all patients, visitors, and staffs entering the hospital during the severe acute respiratory syndrome (SARS) outbreak in 2003. If someone was diagnosed with SARS later, all individuals who contacted the person in the hospital could be immediately identified.\n\nAn embedded chip is used as a core to establish a body area network in the prosthesis training system in this work. The 3D positioning information of the amputee's limbs is acquired through installing RFID reader in the limb prosthesis. A gait pattern classifier is adopted to compare current gait pattern of the amputee with the sample gait pattern records in the database. Proper feedback messages are then issued to the leg-amputees in order to provide completed and effective gait training.\n\nThis article is organized as follows: the next section presents the proposed prosthesis training system. The simulation results are given in Section 3, and the final section concludes the work.\n\nThe architecture of the proposed prosthesis training system is shown in Fig. 1 . Several RFID readers are installed on the limb prosthesis as shown in Fig. 1(a) . The system keeps receiving data from RFID tags attached on the railing at the both sides of the legamputee during gait training processing. Some proper feedback messages will be issued to the leg-amputee for correcting his/her gait.\n\nAs illustrated in Fig. 1(b) , the feedback messages are generated by the four modules according to the received data from RFID tags in the system. First, RFID positioning module positions the gait of amputee based on real-time positioning information that RFID readers receive from tags on the railing. The training gait pattern recording module then records the angle variation of thigh and knee of leg-amputee with respect to time and the trainee's position. The gait pattern classification module is responsible for comparing current gait record of the amputee, which is forwarded by the training gait pattern recording module, with the sample gait patterns established in the system and assists in diagnosing whether the amputee would suffer from an accident during gait training. The feedback message module determines whether the system should issue a real-time guidance message to the amputee for correcting her/his gait according to the gait pattern classification result. Notably, the system will forward the amputee's gait record to the experts if the gait pattern mismatches all the samples in the database so as to obtain appropriate guide messages for the new gait patterns. The detailed descriptions of the above-mentioned four modules are given below.\n\nReceived signal strength (RSS) is adopted as the parameter of the RFID positioning algorithm to estimate the distance between the sender and the receiver. The detected signal strength decreases with the increasing distance to the sender. Thus, the detected signal will differ when the receiver is at different location. It can be shown that the remaining power of wave receiver in the signal propagation can be expressed as follows:\n\nwhere P T is the transmission power of sender, G T is the gain of transmitter, G R is the gain of receiver, is the wave length, and D is is the distance between sender and receiver. Notably, all the parameters are known and measurable except the distance. The distance is thus determined by,\n\nThe railing and tag screen employed in the gait training of legamputee is shown in Fig. 2(a1) . The RFID reader installed in the lower-limb prosthesis, as illustrated in Fig. 2 (a2), can read several RFID tag data simultaneously. In the meantime, the locations of RFID reader and the two tags shown in Fig. 2 (b) will form a triangle. The length a as given in Fig. 2(b) denotes the spacing between two RFID tags and it is fixed and set beforehand. The lengths b and c can be derived from signal strength of RSSI. D(x D , y D ) represents the coordinate of RFID reader projected on the bottom line of the triangle, and d can be derived accordingly by means of Pythagoras theorem. After all RFID readers are positioned, the training gait pattern recording module will take the responsibility for recording the variation of gait patterns of the amputee.\n\nD(x D , y D ) is as follows: \n\nFig . 3 illustrates the relative position variation of the RFID readers while the trainee moves forward during the leg-amputee's gait training process. The angle variation of thigh and knee of legamputee with respect to time and the trainee's position will be recorded for further processing by the training gait pattern classifying module and the evaluation metric computation module. The angle variation of thigh and knee of leg-amputee can be derived by,\n\nwhere \u00c2 thigh is angle variation of thigh, \u00c2 knee denotes angle variation of knee, and A, B, C, and D represent four RFID readers installed in the prosthesis, respectively.\n\nThis module aims to classify the training tracks into different types of gait patterns. The red curves in Fig. 4 give four examples of the abnormal gait records for \u00c2 thigh and \u00c2 knee , from which we can derive the initial angle , the length of perpendicular H, and time consumption per step t as illustrated in the figure (For interpreta-tion of the references to color in this sentence, the reader is referred to the web version of the article). Take Fig. 4 (a) as an example, in which larger initial angle and smaller length of perpendicular H than those of the normal patterns is observed. This situation occurs while the trainee walks too fast. During prosthesis training, the module receives a new gait record and then records it in the table, Record T, where we can obtain three parameters to train the classification module. Decision tree and fast learning neural-networks (FLNNs) are adopted as the classification algorithms in this study. The motivation of using decision tree and neural networks here is that both techniques are powerful and popular tools for classification and prediction [14] [15] [16] [17] [18] [19] , and there are lots of solutions on VLSI chips which allow both techniques to be hardware-computed.\n\nDecision tree [14] [15] [16] is a predictive mode, a mapping of observations about an item to conclude about the item's target value. Each interior node corresponds to a variable; an arc to a child represents a possible value of that variable. A leaf represents the predicted value of target variable given the values of the variables represented by the path from the root. There are several advantages for decision tree. For instance, it is simple to understand and interpret, and it is able to handle nominal and categorical data and perform well with large data set in a short time. In this work, we use C4.5 decision tree to predict the direction change of stock price because C4.5 decision tree performs well in prediction application as report in [20] .\n\nA decision tree is a hierarchy of yes/no questions in which the specific questions asked depend on the answers given to the previous questions, with the branches spreading out from the original question until an appropriate response is given. Decision trees can be used to encapsulate the knowledge of an expert about a specific system. Various methods exist for the development of decision trees from datasets, with the goal of each method being to produce a structure that gives the highest degree of accuracy for the smallest tree design [21] [22] [23] .\n\nDecision tree learning is one of the most widely used and practical methods for inductive inference. It is a method for approximating discrete-valued functions that is robust to noisy data and capable of learning disjunctive expressions. C4.5, one of the most widely used decision tree learning algorithm, is adopted in our work.\n\nIn the process of constructing the decision tree, the root node is first selected by evaluating each attribute using a statistical test to determine how well it alone classifies the training examples. The best attribute is selected and used to test at the root node of the tree. A descendant of the root node is created for each possible value of this selected attribute, and the training examples are sorted to the appropriate descendant node. The entire process is then repeated using the training examples associated with each descendant node to select the best attribute to test at that point in the tree.\n\nThere are two frequently used metrics for attributes selection. One is the information gain, Gain(S, A) of an attribute A, relative to a collection of examples S,\n\nwhere Value(A) is the set of all possible values for attribute A, and\n\nS v is the subset of S for which attribute A has value v. Entropy(S) is the entropy of S. The entropy is defined as:\n\nwhere c denotes the number of all possible values for attribute A.\n\nNotably, the first term on the right hand side of Eq. (5) denotes the entropy of the original collection S, and the second term is the expected value of the entropy after S is partitioned using attribute A.\n\nThe second metric commonly used for attributes selection is called Gain ratio,\n\nwhere Split information is defined as:\n\nwhere S 1 through S c are the c subsets of examples resulting from partitioning S by the c-values attribute A. Note that Split information is actually the entropy of S with respect to the values of attribute A. Notably, the metric for attribute selection as given in Eq. (7) is employed in C4.5 algorithm for better performance achievement [24] . \n\nThe fast learning neural networks (FLNNs), as shown in Fig. 6 , are chosen owing to their superior performance in the literature [25] . The major problem of applying neural networks is that it is not impractical to use neural networks in real-time applications because it takes too much time during neural network training process. However, there have been lots of solutions on VLSI chips which allow the neural networks to be hardware-computed, thus the implementation of neural networks by hardware becomes feasible nowadays. Besides, this work replaces the classical back propagation learning by a fast learning algorithm to reduce the overlong training time that usually occurs in the traditional neural network models.\n\nThe FLNNs [25] which adopt the fast learning algorithm can automatically select appropriate value of neural quantizers and analytically determine the weights and bias of the network at one time. This kind of neural-networks has the following characteristics:\n\n(1) The neural networks are composed of two hidden layers, with first larger and second narrower. There are several neuron quantizers that connect to the input layer and one or several neurons in the second hidden layer. (2) All the connection weights between the input layer and the first hidden layer can be simply prefixed, and most of them are randomly assigned. (3) The connection weights between the first hidden layer and second hidden layer can be determined at one time, instead of the iterative adjustment adopted in traditional neural network learning algorithms. (4) The connection weights between the second hidden layer and the output layer can be simply set as a constant value C. (5) Weight size factor wf or C and quantizer factors qt and qu should be adjusted to optimize generalization performance.\n\nThe fast learning algorithm (FLA) adopted in this work can be summarized as follows:\n\nInputs of FLA: The learning procedure of FLA:\n\nStep 1: Sorting and grouping inputs. (a) Randomly choose vector wt \u2208 n and re-index inputs such that\n\nStep 2: Determination of weights and biases of two hidden layers. T : (g) = (M (g) ) * U (g) (g) = (M (g) ),\n\nwhere (x) = 1/(1 + e \u2212x ), and (M (g) ) * stands for the Moore-Penrose generalized inverse of (M (g) ).\n\n. . ln 0.5 + t gN/G,1 /C 0.5 \u2212 t gN/G,1 /C \u00b7 \u00b7 \u00b7 ln 0.5 + t gN/G,m /C\n\nStep 3: Determination of weights and biases of neural quantizers.\n\n(a) Set the quantizers factor qt and qu as\n\n(b) Set the connection weights wt P (g) and wt Q g) that link the input layer and neurons P (g) and Q (g) , g = 1, 2, ..., G, as\n\n(c) Set the biases of neurons P (g) and Q (g) , g = 1, 2, ..., G as\n\n(d) Set the connection weights w AB that link neurons A (p) and B (p) and the second hidden layer as\n\n(e) Set the connection weights and the biases that link neurons of the second hidden layer and the output layer as Fig. 7 . Support vectors and margin.\n\nIn a decade, SVMs [26] [27] [28] [29] [30] have attracted much attention as a new classification technique with good generalization ability. The basic idea of SVMs is to map input vectors into a high-dimensional feature space and linearly separate the feature vectors with an optimal hyper-plane in terms of margins, i.e. distances of given examples from a separating hyper-plane.\n\nSVMs are promising methods for the prediction of financial time series because they use a risk function consisting of the empirical error and a regularized term which is derived from the structural risk minimization principle. Given a training dataset represented by the X-matrix (X 1 , ..., X m ) divided into two linearly separable classes with class labels (+1 and \u22121) stored in the Y-vector (Y 1 , ..., Y m ) as given in Fig. 7 , the maximum margin plane can be found by minimizing ( w 2 ):\n\nw2i (21) with constraints:\n\nwhere i = 1, . . ., m, b \u2208 R, and x i \u2208 R d . Fig. 7 shows the simplest case of two linearly separable classes. The concept of support vectors is illustrated by the points closest to the surface separating two classes, and the margin is given by the distance between support vectors and separating surface.\n\nThe decision function takes the form f (x) = sgn(w \u00b7 x + b), where sgn(\u00b7) is simply a sign function which returns +1 for positive arguments and \u22121 for negative arguments. This simple classification problem is generalized to a non-separable case by introducing slack variables x i and minimizing the following quantity:\n\nwhere y i (w \u00b7 x i + b) \u2265 1 \u2212 i and i > 0. The above quadratic optimization problem with constraints can be reformulated by introducing Lagrangian multipliers\u02db, , and the following Lagrangian is formed, Stationary points of this Lagrangian can be obtained by:\n\nTwo remaining derivatives (( \u2202 L/\u2202\u02db), ( \u2202 L/\u2202 )) recover the constraint equations. By substituting the expression w = m i=1\u02dbi y i x i back into the Lagrangian, we obtain this simpler dual formulation\n\nwith the constraints 0 \u2264\u02dbi \u2264 C and \u02dbiy i = 0.\n\nx \u2192 (x),\n\nthe dot product in the final space can be replaced by a Mercer kernel (x) (y) \u2192 K(x, y).\n\nSince ( \u00b7 ) typically maps x into the space of much higher dimensionality, it is usually specified by defining the kernel implicitly. The above dual formulation thus becomes a preferred approach due to highly dimensional feature space induced by ( \u00b7 ) mapping. The decision function for classification problems is then given by:\n\nThis module provides the trainees appropriate feedback messages by means of a rule-based expert system that includes the trajectory pattern database and the feedback message database. Sample gait patterns are collected in the trajectory pattern database during gait training. The gait record of the amputee is compared with the sample gait patterns in the trajectory pattern database, and a feedback message can then be generated from the feedback message database depending on how long the gait training given to the trainee. For example, when the system detects that the trainee's gait step is too large, the system will deliver a message, \"Please slow down your movement\", for the beginner because a trainee tends to be nervous at first. On the other hand, a message such as, \"Please don't straighten your knees too early. You might get hurt!\", will be offered if a well-trained user walks too fast. Fig. 8 shows a screen shot of an example of the feedback message provided by the feedback message module. Notably, if a new gait sample cannot be judged by the feedback message module, it will be added in the feedback message database with the assistance of the expert. Moreover, the expert can add appropriate feedback messages according to the trainees' portfolio database.\n\nIn the experiments conducted in this research, 27 kinds of gait patterns were identified by experienced experts who specialize in prosthesis training. 912 gait training patterns were collected from the leg-amputees during real gait training process and were classified by an expert. The classification accuracy ratio was computed by using the leave one out cross validation (LOOCV) technique [31] to examine the effectiveness of the proposed training system. Notably, the LOOCV method removes a single sample in each trial, trains on the rest, and then tests the classifier on the removed single sample.\n\nThe classification results are given in Table 1 . It can be seen that, in average, accuracy ratio of the proposed training system is 89.0716%, the testing root mean square error (RMSE) is 0.1307, and the its standard deviation (DEV) is 3.86%. It implies that the proposed prosthesis training system not only detects the movements of leg-amputees, but also classifies most of the gait patterns correctly. Meanwhile, the performance of the three compared classifiers is about the same. Notably, the computation time comparison for the three classifiers, as shown in Table 2 , reveals that the computation time required for both the training and the testing stage is insignificant for FLNNs. The simulation results thus exhibit the effectiveness and practicability of the proposed prosthesis training system.\n\nA prosthesis training system that utilizes an angular comparison method is proposed in this work to replace the traditional graphic comparison method owing to the requests for automatic and real-time guidance. A so-called dissimilarity degree is defined in this work to diagnose abnormal gait patterns that the trainee might suffer from. Instant and adaptive feedback messages that are useful to correct their walking postures are given by the prosthesis training system during the self-training process. An evaluation metric is presented in this work to assist in providing suitable messages to the trainees under different training stages. A series of simulations were conducted in order to evaluate the performance of the proposed system. The simulation results reveal the effectiveness and practicability of proposed prosthesis training system.\n\nThe economic factor usually determines whether a leg-amputee can accept complete and sufficient gait training. The cost of the proposed system is affordable to the trainees owing to wide deploy-ment of the low-cost RFIDs. In addition, the new gait samples can be added in the database with the assistance of the experts if a mismatch occurs between the training pattern and the samples recorded in the database. Therefore, the prosthesis training system proposed this work can greatly benefit the amputees because they can borrow or buy from the limb prosthesis vendors and train themselves at home. The future work will focus on developing more advanced algorithms in order to improve the classification accuracy of the proposed work."}