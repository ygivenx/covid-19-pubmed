{"title": "Jackknife and Bootstrap Tests of the Composition Vector Trees", "body": "Composition vector (CV) trees are inferred from whole-genome data by using an alignment-free and parameter-free method (1), implemented as a web server entitled CVTree 2, 3. The CV method has been successfully applied to infer phylogeny of viruses 4, 5, bacteria 1, 6, 7, chloroplast (8) and fungi (9). In all cases, the majority of branchings in the CVTrees agree well with the biologists\u2019 classification at all taxonomic ranks from phyla down to species while a few disagreements remain. They indicate strongly on possible taxonomic revisions debated by microbiologists since a long time ago (7). This overall agreement serves as a major and objective justification of the CVTrees.\n\nHowever, traditionally phylogenetic trees obtained using various methods are subject to statistical re-sampling tests such as bootstrap or jackknife (10). In fact, due to the limited size of sampling space, most researchers could not afford to do jackknife tests and had to be content with bootstrap type tests. Nonetheless, even successful passing of these tests merely shows stability and self-consistency of the inferred trees with respect to certain variations in the original dataset. Objective judgment of the meaningfulness of trees must rely on arguments beyond trees themselves, say, by direct comparison with the efforts of many generations of taxonomists as ideally phylogeny and taxonomy should agree with each other. However, several anonymous referees of our previous publications and a few users of the CVTree web server 2, 3 have repeatedly raised the questions of statistical support of the CVTrees. Correspondingly, we have shown a few bootstrap results in Qi et al. (1) and Wang et al. (9) without giving details. In these papers, we described the method of our bootstrap, jackknife and anti-jackknife (see below) tests of CVTrees. We showed the results on the examples of virus, bacteria and fungi. Since full-fledged bootstrap/jackknife tests are extremely time-consuming and soon come the epoch of inferring phylogeny for thousands of species in not-too-distant future, our ultimate goal is to advocate the viewpoint that one may give up routine statistical re-sampling tests for the robust and stable CV method, and rely on direct comparison of phylogeny with taxonomy to justify the inferred trees.\n\nIn the CV approach, each organism is represented by a composition vector made of K-peptide counts obtained from the organism\u2019s proteome. The K-value controls the resolution of the method. A subtraction procedure based on (K\u22122)-th order Markov prediction is introduced to suppress effect of neutral mutations and to highlight the shaping role of natural selection (1). The most suitable K-values depend on the overall size of the proteome of the group of organisms under study. Our previous work has shown that the \u201cbest\u201d Ks are 4 and 5 for viruses, 5 and 6 for prokaryotes, 6 and 7 for fungi. We will see that bootstrap tests provide another angle to look at these K-values.\n\nThus our justification of CVTrees goes in two steps. First, we show that the CVTrees based on whole proteomes (to be called the original CVTrees hereafter) are robust, and the branchings agree well with the corresponding taxonomy. This has been done in our previous studies 1, 5, 6, 7, 8, 9. Second, in this paper, trees obtained by bootstrap or jackknife re-sampling of the datasets are compared to the original CVTrees at the same K in terms of topological distances between them. As CVTrees are calculated by Neighbor-Joining algorithm (11), which is a robust and quartet-based method (12), our strategy reminds what adopted by Rzhetsky and Nei (13) in estimating minimal-evolution trees by comparison with the corresponding NJ-tree. We make emphasis on topology, i.e., branching schemes, of the trees as they are directly related to taxonomy.\n\nAs CV method does not use sequence alignment, statistical re-sampling cannot be carried out in the usual way of random choice of nucleotide or amino acid sites with replacement. Instead, we pick up proteins at random from the pool of all proteins in the genome of an organism. We used four datasets of protein sequences encoded in the genome:1.A collection of 124 double-strand DNA (dsDNA) virus genomes as studied and listed in Gao and Qi (5), denoted as \u201cVirus 124\u201d in Figure 1, Figure 2.2.A collection of 16 archaea, 87 bacteria, and 6 eukarya genomes, denoted as \u201cProkaryote 109\u201d in Figure 1, Figure 2. This 109-genome dataset was used in Qi et al. (1) and served as a touchstone for many further studies.3.A collection of 41 archaea, 401 bacteria, and 8 eukarya genomes, denoted as \u201cProkaryote 450\u201d in Figure 1, Figure 2. The list of these 450 genomes may be fetched from the authors\u2019 webpage (http://www.itp.ac.cn/~hao/450list.pdf).4.A collection of 82 fungal genomes plus 3 eukarya as outgroups. This dataset was used in Wang et al. (9) and denoted as \u201cFungi 85\u201d in Figure 1, Figure 2.\n\nOn each of these datasets, jackknife and bootstrap tests are performed in the following way. In the CV method, a species is represented by a composition vector made of overlapping K-residues, designated as \u201cK-peptides\u201d hereafter, from all proteins in the genome. To do jackknife tests, we first take randomly 90% of proteins from the whole protein pool. This is done for all species and a CVTree is constructed by carrying out the crucial \u201csubtraction procedure\u201d (1). The topological distance between this tree and the original CVTree inferred from the whole protein pool is calculated. This re-sampling is performed 100 times and the average topological distance between these 100 trees and the original 100% CVTree at the same K is taken. Then the protein fraction is decreased to 80%, 70%, \u2026, 10% and the average topological distance at a given K is plotted against the protein fraction (Figure 1).\n\nSuppose a species\u2019 genome contains M protein products. In order to do bootstrap tests, the same number M proteins are drawn at random from the pool. The drawing is done with replacement, i.e., some proteins may be drawn repeatedly and some others may be skipped at all. The topological distance between a bootstrap tree and the original CVTree with the same K is calculated. Again the average topological distance of 100 bootstrap trees is retained as the final result (see the discussion of Figure 2 below).\n\nIn doing a bootstrap test, the probability that a designated protein is drawn at the first try is 1/M; the probability of its being skipped is 1\u2212/M. The probability of its being dropped at M tries is (1\u22121/M)M and the probability of being drawn is 1\u2212(1\u22121/M)M. At the limit of very big M, the latter goes to 1\u22121/e \u2248 0.63212, where e=2.71828 is the base of natural logarithm. This means that in performing a bootstrap test, though M proteins are drawn from the pool on average, only 63.21% of the protein assortment is kept. Therefore, we superimpose the results of bootstrap tests for various K conditionally against protein fraction 0.6321 in Figure 1 of jackknife tests.\n\nWe used the topological distance to measure the difference between phylogenetic trees. The definition of topological distance could be found in the previous literature 14, 15. An unrooted tree with N terminal leaves has N\u22123 internal edges. Cutting any of these internal edges defines a split of the set of leaves into two subsets. To measure the distance between two trees constructed for the same set of leaves, we compare the two lists of split-trees obtained by cutting each of the N\u22123 internal edges. If the two lists are identical up to reordering, the two trees have the same topology and the topological distance dT=0. In general, the topological distance is defined as (16):dT=2\u00d7(number of distinct split-trees)\n\nThe factor 2 was introduced to incorporate more general cases of multi-furcating nodes (CV method yields only bifurcating trees). Therefore, if the two trees have entirely different topologies, the topological distance between them reaches the maximal value dT = 2\u00d7(N\u22123). We have written a program to implement the definition of topological distance. In fact, we adopt a relative topological distance by dividing the calculated dT by its maximal possible value 2\u00d7(N\u22123), thus the factor 2 drops out and the relative distance varies between 0 and 1.\n\nGZ and ZX collected data and performed most of the calculations. HY implemented the Penny-Hendy algorithm for calculating topological distance between trees. BH designed the whole work and performed the analysis. GZ and BH wrote the manuscript. All authors read and approved the final manuscript.\n\nThe authors have declared that no competing interests exist."}