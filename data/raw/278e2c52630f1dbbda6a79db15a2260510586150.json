{"title": "PhyloFold: Precise and Swift Prediction of RNA Secondary Structures to Incorporate Phylogeny among Homologs Associate Editor: XXXXXXX Received on XXXXX; revised on XXXXX; accepted on XXXXX", "body": "A large quantity of functional ncRNAs have been discovered through sequencing technology, including high throughput sequencing (Maxam and Gilbert, 1977; Bentley et al., 2008) . The RNAs are related to various biological processes such as epigenetic silencing (Pasmant et al., 2011) , splicing regulation (Ji et al., 2003) , translational control (Long and Caceres, 2009 ), apoptosis regulation, and cell cycle control (Kino et al., 2010) . However, the functions of a large number of RNAs have not yet been uncovered. Secondary structures of the RNAs are an important key to uncovering the functions of the RNAs because the structures play critical roles in biological processes, (Wu et al., 1991) and secondary structures are often conserved among homologs even in the case where the sequences of the homologs are nonconserved. (Klein and Eddy, 2003) To more correctly predict secondary structures, simultaneous consideration of sequence alignment and secondary structure, or structural alignment (Sankoff, 1985; Hofacker et al., 2004; Havgaard et al., 2007) , has been taken into account. (Hamada et al., 2009c (Hamada et al., , 2011 Tan et al., 2017) However, the consideration has been proven intractable (Sankoff, 1985) and thus has been conducted roughly to decompose structural alignments. (Hamada et al., 2009c,a; Sato et al., 2012; Tan et al., 2017) To more accurately accomplish this goal, the PhyloFold method ( Figure 1 ) was developed in this study. The method predicts secondary structures of homologs considering likely pairwise structual alignments between the homologs by a sparsification technique. (1) The method computes pairwise structural alignment probabilities for each pair of input homologs.\n\n(2) Next, the method calculates average pairing probabilities between a target homolog and multiple support homologs to incorporate more than one sample into the subsequent predictions of secondary structures.\n\n(3) Finally, the method predicts the single secondary structure of each input homolog or the consensus secondary structure of the input sequence alignment.\n\n!\"#\"$%#\"#$#$%%#%\"$%$#\"#%$ \n\nLet STA RNA , f e STA be a set of all possible alignments STA RNA and the free energy (or inverse of the score) of the alignment STA, respectively. Assume that the probability of any alignment STA \u2208 STA RNA , p STA , obeys a Boltzmann (probability) distribution, i.e. p STA = exp(\u2212\u03b2f e STA ) Z where Z = STA exp(\u2212\u03b2f e STA ) and \u03b2 is a positive real number. Z is called a partition function. \u03b2 scales any energy f e STA . Let P PA RNA be the pair alignment probability matrix given the pair RNA. Let I PA STAijkl be 1 if the pairs (i, j), (k, l) are pair-aligned in the alignment STA and 0 otherwise, where i, j are two positions in the sequence RN A, k, l are two positions in the other sequence RN A , and i < j, k < l. The matrix P PA RNA can be written by the probabilities p STA :\n\nijkl is the probability that the pairs (i, j), (k, l) are pair-aligned.\n\nAny computation methods for a matrix P PA RNA have not been proposed although the concept of it P PA RNA is proposed in Hamada et al. (2009c) . Therefore, a computation method for the matrix P PA RNA and an efficient sparse version of the method are suggested in this study.\n\nLet f e SS be the free energy of the structure SS. The energy f e STA RNA is decomposed into additional components: f e STA RNA = f e SS RN A + f e SS RN A + f e PA + f e LA + f e gap . Here, f e PA , f e LA are the sum free energy of the pair and loop alignments in STA RNA , respectively. Also, f e gap is the sum free energy (or penalty) of affine gaps in the alignment\n\nThe components f e SS RN A , f e SS RN A can be computed by the estimated parameters of the Turner (nearest neighbor) model, which approximates the free energy of RNA secondary structure on thermodynamics. (Turner and Mathews, 2010) As the components, conventional methods based on structural alignment employ posterior pairing probability matrices on single secondary structure, predicted by inside-outside algorithms such as the McCaskill algorithm (McCaskill, 1990) , to simplify computations, although the suitability of the matrices has not been discussed. (Hofacker et al., 2004; Do et al., 2008) . Hence, the Turner model, instead of the matrices, is adopted in this study to prevent a reduction in the accuracy of a matrix P PA RNA . The components f e PA , f e LA can be computed by the RIBOSUM score matrices, predicted from learning datasets of validated structural alignments. (Klein and Eddy, 2003) In this study, the RIBOSUM score 80-65 matrices, which are the most popular, are adopted.\n\nIn the next section, an efficient (however nevertheless impractical) method that computes a matrix P PA RNA in the framework of an inside-outside algorithm is proposed.\n\n2.4 Inside-outside algorithm that computes pair alignment probability matrix P PA RNA A probability p PA,RNA ijkl can be written with two 'inside\" and one 'outside\" \n\ncan be considered though the sparsification proposed in this study is not effective for the variants. Algorithm 1 is the \"simultaneous\" solution of the Durbin (forwardbackward) algorithm, which predicts posterior alignment probability matrices on pairwise sequence alignment (Durbin et al., 1998) , and the McCaskill algorithm (McCaskill, 1990) , as expected. Algorithm 1 is also an inside-outside algorithm version of the Sankoff algorithm, which predicts pairwise structural alignments whose free energy is minimum (Sankoff, 1985) , as expected. The time and space complexities of Algorithm 1 are preferably around O(N M ) to deal with long ncRNAs. In the next section, a solution to the heavy complexity, sparsifying all possible structural alignments STA RNA , is introduced. reserved. No reuse allowed without permission.\n\nThe copyright holder for this preprint (which was not peer-reviewed) is the author/funder. be the pairing probability of the positions i, j given the sequence RN A. In this study, the following sparsification conditions are introduced: \n\nProbabilistic consistency transformation is the technique that converts a probability between a target homolog and each support homolog into a metric that summarizes the phylogeny among all the homologs. (Do et al., 2005) The transformation has been required because the computational complexities involved in computing posterior probabilities among all the homologs is NP-complete as with multiple precise alignment. (Do et al., 2005; Hamada et al., 2009c; Tan et al., 2017) \n\nThe accuracy of a predicted structure SS against a reference alignment STA is measured based on terms of positive and negative predictions:\n\nwhere T P, T N, F P, F N are the numbers of true positive, true negative, false positive, and false negative predictions, respectively, and {\u03b1 h } is their scale parameter. In this study, the counts T P, T N, F P, F N are configured as: Because the accuracy and \u03b3-dependent accuracy a(SS, STA), a \u03b3 (SS, STA) = \u03b3T P + T N are equivalent, the expected accuracy to be maximized is gained:\n\n. The predicted structure that maximizes expected accuracy E STA RNA [a \u03b3 (SS RN A , STA RNA )] can be computed to conduct Nussinov-type dynamic programming (Nussinov et al., 1978) based on the following recursion:\n\n.\n\nIn order to consider more than one support homolog, it is sufficient that probabilities p pair,RNA The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. All rights . https://doi.org/10.1101/2020.03.05.975797 doi: bioRxiv preprint ) can be computed by the RNAalipfold algorithm. (Bernhart et al., 2008) 3 Results and discussions\n\nThe PhyloFold method proposed in this study was implemented in the Rust programming language as the PhyloFold program ('https://github.com/heartsh/phylofold\") and the PhyloAliFold program ('https://github.com/heartsh/phyloalifold\"). The programs employ multithreading to achieve the fastest possible running time. Programs were run on a computer composed of an \"AMD EPYC 7501\" CPU with 128 threads and a clock rate 2 GHz and 128 GB of RAM unless environments for running programs are otherwise specified.\n\nPositive predictive value, sensitivity, and false positive rate are calculated from the numbers of true and false positives and negatives:\n\nThe PhyloFold program performed the best trade-off of the above metrices (Figure 3 ) among the PhyloFold, CentroidFold (Hamada et al., 2009b) , CentroidHomFold (Hamada et al., 2009c) , and TurboFold-smp (Tan et al., 2017) programs (Table 2 ) on test set \"unaligned\" (Table 3) while demanding comparable running time (Table 4 ). Ten percent of ncRNA families whose reference seed structural alignments have at most 200 columns and whose number of homologs is less than 11 are sampled from the Rfam database (Kalvari et al., 2018) . The reference seed structural alignments of the 147 sampled families are compiled as test set \"aligned\". The rightmost column shows the type of probabilities used to predict secondary structures. Precise alignment type is proposed in this study. Decomposed alignment type considers structural alignment to decompose an alignment STA RNA into the structures and alignment SS RN A , SS RN A , SA RNA . Single sequence type does not take support homologs into account. \"+ consensus structure\" means that probabilities on consensus secondary structure given input sequence alignment are mixed. Precise alignment (+ consensus structure) type is expected to display the highest prediction accuracy. Unaligned homologs of 11 ncRNA families and the reference secondary structures of the homologs were collected from the RNA STRAND database (Andronescu et al., 2008) and compiled as test set \"unaligned\". The Rfam database was not used to build the set because this database does not register reference single secondary structures. Ten homologs and their reference secondary structures were sampled from each ncRNA family when the family had 11 or more homologs. The middle and rightmost columns show the number of homologs and the range of lengths on each ncRNA family, respectively. \"Coronavirus 3 prime stem-loop\u2026\" and \"Vimentin 3 prime UTR\" stand for \"Coronavirus 3 prime stem-loop II-like motif (s2m)\" and \"Vimentin 3 prime UTR protein-binding region,\" respectively.\n\nThe PhyloAliFold program demonstrated a superior trade-off of the above metrices ( Figure 4 ) compared to the CentroidAliFold program (Hamada et al., 2011) on the set keeping comparable running time (Table 5) .\n\nreserved. No reuse allowed without permission.\n\nThe copyright holder for this preprint (which was not peer-reviewed) is the author/funder. All rights . https://doi.org/10.1101/2020.03.05.975797 doi: bioRxiv preprint (Katoh and Standley, 2013) were used to compute the sequence alignments to input into the PhyloAliFold program. The MAFFT G-INS-i executes only classic multiple sequence alignment whereas the MAFFT X-INS-i considers structural alignments during multiple sequence alignment to decompose them. The reference sequence alignments of the ncRNA families in test set \"aligned\" are also used as the input of the PhyloAliFold. Table 4 . The benchmark of \u03b3-dependent programs that predict single secondary structures on running time using test set \"unaligned\".\n\nRunning time Time complexity\n\nThe rightmost column shows the ideal time complexity of each program where R is the number of homologs and N is the longest length of the homologs. The running time of the programs were measured when \u03b3 = 2 0 = 1 across the test set. All the parameter values of the programs were the same as Figure 3 . The computer used has an \"Intel Xeon CPU\" CPU with 64 threads and a clock rate of 2.30 GHz and 240 GB of RAM. The programs were run exploiting as many threads as possible to complete the benchmark in the shortest time. \n\nThe rightmost column shows the ideal time complexity of each program where R is the number of homologs, N is the longest length of the homologs, C is the number of columns in an input sequence alignment. The running time of the programs were measured when \u03b3 = 2 0 = 1 across the test set using the MAFFT X-INS-i program to predict input sequence alignments. All the parameter values of the programs were the same as Figure 4 . The computer used is the same as Table 4 . The programs were run exploiting as many threads as possible to complete the benchmark in the shortest time.\n\nreserved. No reuse allowed without permission.\n\nThe copyright holder for this preprint (which was not peer-reviewed) is the author/funder. All rights . https://doi.org/10.1101/2020.03.05.975797 doi: bioRxiv preprint \n\nThe PhyloFold method, which predicts secondary structures considering the phylogeny among homologs, has been devised. The method demonstrated superior prediction accuracy compared to competitors while demanding comparable running time on the prediction of both single and consensus secondary structures. The method has the potential to be improved by secondary structure probing methods such as icSHAPE (Spitale et al., 2015) and SHAPE-MaP (Siegfried et al., 2014) as demonstrated in the SuperFold (Siegfried et al., 2014) and TurboFold methods.\n\nProbabilities } can be utilized to improve the accuracy of existing methods that predict RNA-RNA interactions, alignments, etc., such as the IntaRNA (Mann et al., 2017) , CentroidAlign (Hamada et al., 2009a) , and DAFS (Sato et al., 2012) programs, which either employ the decomposition of structural alignments or do not incorporate structural alignments."}